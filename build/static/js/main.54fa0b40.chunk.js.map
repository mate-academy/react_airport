{"version":3,"sources":["Flights.js","Tabs.js","constants.js","FlightList.js","App.js","serviceWorker.js","index.js"],"names":["Flights","props","flight","term","time","airportTo","statusCode","actual","gateNo","displayGate","colorTerm","flights","map","flightItem","react_default","a","createElement","key","airline","en","id","name","airlines","codeShare","flightTime","concat","getHours","getMinutes","actualFlightTime","className","statusFlight","getStatus","Tabs","departureClassName","arrivalClassName","loadData","imgDeparturesColor","imgArrivalsColor","type","data","onClick","data-v-2cc0fd12","width","height","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","transform","d","defaultProps","console","log","headersWithGate","headersWithoutGate","FlightList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","flightComponents","headersItems","bind","assertThisInitialized","getRowComponents","getHeaders","response","ID","timeDepShedule","Date","timeArrShedule","codeShareData","status","eventTarget","_this2","direction","currentTarget","attributes","value","dateNow","toLocaleString","slice","replace","xhrFlights","XMLHttpRequest","open","addEventListener","actualFlights","JSON","parse","body","setState","send","_this$state","header","Component","App","src_FlightList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54fa0b40.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Flights(props) {\n  const {\n    flight,\n    term,\n    time,\n    airportTo,\n    statusCode,\n    actual,\n    gateNo,\n    displayGate,\n  } = props;\n\n  const colorTerm = term === 'A' ? 'termAIcon' : 'termBIcon';\n  const flights = flight.map(flightItem => (\n    <div key={flightItem.airline.en.id}>\n      {flightItem.airline.en.name}\n    </div>\n  ));\n  const airlines = flight.map(airline => (\n    <div key={airline.airline.en.id}>\n      {airline.codeShare}\n    </div>\n  ));\n  const flightTime = `${time.getHours()}:${time.getMinutes()}`;\n  const actualFlightTime = `${actual.getHours()}:${actual.getMinutes()}`;\n\n  const getStatus = () => {\n    let statusFlight;\n    switch (statusCode) {\n      case 'ON':\n        statusFlight = 'On time';\n        break;\n      case 'DP':\n        statusFlight = 'Departed';\n        break;\n      case 'CK':\n        statusFlight = 'Check-in';\n        break;\n      case 'LN':\n        statusFlight = 'Landed';\n        break;\n      case 'CX':\n        statusFlight = 'Cancelled';\n        break;\n      case 'BD':\n        statusFlight = 'Boarding';\n        break;\n      default:\n        statusFlight = statusCode;\n    }\n\n    if (\n      statusFlight === 'Boarding'\n      || statusFlight === 'Landed'\n      || statusFlight === 'Departed'\n    ) {\n      statusFlight = `${statusFlight} ${actualFlightTime}`;\n    }\n\n    return statusFlight;\n  };\n\n  return (\n    <tr>\n      <td><span className={colorTerm}>{term}</span></td>\n      {displayGate ? <td>{gateNo || '-'}</td> : null}\n      <td>{flightTime}</td>\n      <td>{airportTo}</td>\n      <td>{getStatus()}</td>\n      <td>{flights}</td>\n      <td>{airlines}</td>\n    </tr>\n  );\n}\n\nFlights.propTypes = {\n  flight: PropTypes.arrayOf(PropTypes.object),\n  term: PropTypes.string,\n  time: PropTypes.objectOf(PropTypes.string),\n  airportTo: PropTypes.string,\n  statusCode: PropTypes.string,\n  actual: PropTypes.objectOf(PropTypes.string),\n  gateNo: PropTypes.string,\n  displayGate: PropTypes.bool,\n};\n\nFlights.defaultProps = {\n  flight: [],\n  term: '',\n  time: {},\n  airportTo: '',\n  statusCode: '',\n  actual: {},\n  gateNo: '',\n  displayGate: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Tabs(props) {\n  const {\n    departureClassName,\n    arrivalClassName,\n    loadData,\n    imgDeparturesColor,\n    imgArrivalsColor,\n  } = props;\n  return (\n    <div>\n      <button type=\"button\" className={departureClassName} data=\"departure\" onClick={loadData}>\n        <span>\n          <svg\n            data-v-2cc0fd12=\"\"\n            width=\"30px\"\n            height=\"18px\"\n            viewBox=\"0 0 40 28\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <g data-v-2cc0fd12=\"\" id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <g data-v-2cc0fd12=\"\" id=\"Group\" transform=\"translate(-4.000000, -7.000000)\">\n                <g data-v-2cc0fd12=\"\" id=\"Path-402\" />\n                <path\n                  data-v-2cc0fd12=\"\"\n                  d=\"M43.8940167,20.2848496 C43.7061583,19.5138567 43.2150547,18.8513283\n                  42.531998,18.4474045 C41.8489414,18.0434806 41.031764,17.9323603\n                  40.2656518,18.1392252 L29.793485,21.013722 L16.1868667,8 L12.3815328,9.02981973\n                  L20.5461037,23.5412796 L10.7478188,26.2328084 L6.85949946,23.1183536\n                  L4,23.9072155 L7.5893717,30.3060954 L9.10710602,32.9956246 L12.2585544,32.1257769\n                  L22.7297214,29.2522799 L31.3082198,26.9046908 L41.7833862,24.0271945 C43.3808131,23.5527844\n                  44.3144732,21.8973179 43.8940167,20.2848496 Z\"\n                  id=\"Path_402\"\n                  fill={imgDeparturesColor}\n                  fillRule=\"nonzero\"\n                  transform=\"translate(23.997341, 20.497812) rotate(27.974730) translate(-23.997341, -20.497812) \"\n                />\n              </g>\n            </g>\n          </svg>\n        </span>\n        Departures\n      </button>\n      <button className={arrivalClassName} data=\"arrival\" type=\"button\" onClick={loadData}>\n        <span>\n          <svg\n            data-v-2cc0fd12=\"\"\n            width=\"30px\"\n            height=\"18px\"\n            viewBox=\"0 0 40 28\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <g data-v-2cc0fd12=\"\" id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <g\n                data-v-2cc0fd12=\"\"\n                id=\"Path-403\"\n                transform=\"translate(-1.000000, -1.000000)\"\n                fill={imgArrivalsColor}\n                fillRule=\"nonzero\"\n              >\n                <g data-v-2cc0fd12=\"\" id=\"Group\">\n                  <path\n                    data-v-2cc0fd12=\"\"\n                    d=\"M40.9190312,14.2925525 C40.731055,13.5210761 40.2396434,12.8581323 39.5561585,12.4539552\n                    C38.8726735,12.0497781 38.0549837,11.9385881 37.2883912,12.1455827 L26.8096581,15.0218819\n                    L13.1945082,2 L9.38678826,3.03046545 L17.5564785,17.5510243 L7.75204986,20.2442408\n                    L3.86129243,17.1278331 L1,17.9171897 L4.59162231,24.3200818 L6.11030829,27.0112974\n                    L9.26373268,26.1409043 L19.7414654,23.2656055 L28.3253427,20.9165445 L38.8070772,18.0372439\n                    C40.4055057,17.5625364 41.3397513,15.9060318 40.9190312,14.2925525 Z\"\n                    id=\"Path_403\"\n                    transform=\"translate(21.009879, 14.505649) rotate(-4.012171) translate(-21.009879, -14.505649) \"\n                  />\n                </g>\n              </g>\n            </g>\n          </svg>\n        </span>\n        Arrivals\n      </button>\n    </div>\n  );\n}\n\nTabs.propTypes = {\n  departureClassName: PropTypes.string,\n  arrivalClassName: PropTypes.string,\n  loadData: PropTypes.func,\n  imgDeparturesColor: PropTypes.string,\n  imgArrivalsColor: PropTypes.string,\n};\n\nTabs.defaultProps = {\n  departureClassName: '',\n  arrivalClassName: '',\n  loadData: () => console.log('loadData is undefined'),\n  imgDeparturesColor: '',\n  imgArrivalsColor: '',\n};\n","export const headersWithGate = [\n  'Terminal',\n  'Gate',\n  'Time',\n  'Destination',\n  'Status',\n  'Airline',\n  'Flight',\n];\n\nexport const headersWithoutGate = [\n  'Terminal',\n  'Time',\n  'Destination',\n  'Status',\n  'Airline',\n  'Flight',\n];\nexport const ARRIVAL = 'arrival';\nexport const DEPARTURE = 'departure';\nexport const ACTIVE = 'active';\nexport const colorActiveIcon = '#1EB7EE';\nexport const colorNotActiveIcon = '#FFFFFF';\n","import React, { Component } from 'react';\nimport Flights from './Flights';\nimport Tabs from './Tabs';\nimport {\n  ARRIVAL,\n  DEPARTURE,\n  ACTIVE,\n  colorActiveIcon,\n  colorNotActiveIcon,\n  headersWithGate,\n  headersWithoutGate,\n} from './constants';\n\nclass FlightList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arrivalClassName: null,\n      departureClassName: null,\n      imgDeparturesColor: null,\n      imgArrivalsColor: null,\n      flightComponents: null,\n      headersItems: null,\n    };\n\n    this.loadData = this.loadData.bind(this);\n    this.getRowComponents = this.getRowComponents.bind(this);\n    FlightList.getHeaders = FlightList.getHeaders.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getHeaders(displayGate) {\n    return displayGate ? headersWithGate.map(header => (\n      <th key={header}>\n        {header}\n      </th>\n    )) : headersWithoutGate.map(header => (\n      <th key={header}>\n        {header}\n      </th>\n    ));\n  }\n\n  getRowComponents(response, displayGate) {\n    return response.map(flight => (\n      <Flights\n        key={flight.ID}\n        term={flight.term}\n        time={flight.timeDepShedule ? new Date(flight.timeDepShedule) : new Date(flight.timeArrShedule)}\n        airportTo={flight['airportToID.city_en'] ? flight['airportToID.city_en'] : flight['airportFromID.city_en']}\n        flight={flight.codeShareData}\n        statusCode={flight.status}\n        actual={new Date(flight.actual)}\n        gateNo={flight.gateNo}\n        displayGate={displayGate}\n      />\n    ));\n  }\n\n  loadData(eventTarget) {\n    const direction = eventTarget ? eventTarget.currentTarget.attributes.data.value : DEPARTURE;\n    const dateNow = new Date().toLocaleString().slice(0, 10).replace(/\\./g, '-');\n    const xhrFlights = new XMLHttpRequest();\n\n    xhrFlights.open('GET', `https://api.iev.aero/api/flights/${dateNow}`);\n    xhrFlights.addEventListener('load', () => {\n      const actualFlights = JSON.parse(xhrFlights.response).body;\n      const displayGate = direction === DEPARTURE;\n      const headersItems = FlightList.getHeaders(displayGate);\n      const flightComponents = this.getRowComponents(actualFlights[direction], displayGate);\n\n      if (displayGate) {\n        this.setState({\n          arrivalClassName: ARRIVAL,\n          departureClassName: `${DEPARTURE} ${ACTIVE}`,\n          imgDeparturesColor: colorActiveIcon,\n          imgArrivalsColor: colorNotActiveIcon,\n          flightComponents,\n          headersItems,\n        });\n      } else {\n        this.setState({\n          arrivalClassName: `${ARRIVAL} ${ACTIVE}`,\n          departureClassName: DEPARTURE,\n          imgDeparturesColor: colorNotActiveIcon,\n          imgArrivalsColor: colorActiveIcon,\n          flightComponents,\n          headersItems,\n        });\n      }\n    });\n\n    xhrFlights.send();\n  }\n\n  render() {\n    const {\n      departureClassName,\n      arrivalClassName,\n      imgDeparturesColor,\n      imgArrivalsColor,\n      flightComponents,\n      headersItems,\n    } = this.state;\n    return (\n      <section>\n        <Tabs\n          departureClassName={departureClassName}\n          arrivalClassName={arrivalClassName}\n          loadData={this.loadData}\n          imgDeparturesColor={imgDeparturesColor}\n          imgArrivalsColor={imgArrivalsColor}\n        />\n        <table>\n          <thead>\n            <tr>\n              {headersItems}\n            </tr>\n          </thead>\n          <tbody>\n            {flightComponents}\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}\n\nexport default FlightList;\n","import React from 'react';\nimport './App.css';\nimport FlightList from './FlightList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FlightList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost.\n        // Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}